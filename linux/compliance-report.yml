---
- name: Generate OpenSCAP compliance report
  hosts: all
  become: true

  vars:
    openscap_packages:
      - openscap-scanner
      - openscap-utils
      - scap-security-guide
    compliance_profile: ospp

  tasks:
    - name: Get our facts straight
      ansible.builtin.set_fact:
        _profile: '{{ compliance_profile | replace("pci_dss", "pci-dss") }}'
        _report_dir: /tmp/oscap-reports

    - name: Ensure OpenSCAP tools are installed
      ansible.builtin.dnf:
        name: '{{ openscap_packages }}'
        state: present

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Ensure report directory exists
      ansible.builtin.file:
        path: '{{ _report_dir }}/{{ _profile }}'
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Set report name
      ansible.builtin.set_fact:
        _report: '{{ _report_dir }}/{{ _profile }}/report-{{ ansible_date_time.iso8601 }}.html'

    - name: Generate compliance report
      ansible.builtin.command: >-
        oscap xccdf eval --profile {{ _profile }} --report {{ _report }}
        /usr/share/xml/scap/ssg/content/ssg-rhel{{ ansible_distribution_major_version }}-ds.xml
      args:
        creates: '{{ _report }}'
      register: _oscap
      failed_when: _oscap.rc not in [0, 2]

    - name: Set report permissions
      ansible.builtin.file:
        path: '{{ _report }}'
        owner: root
        group: root
        mode: 0644

    - name: Copy File to Localhost
      ansible.builtin.copy:
        src: "{{ _report }}"
        dest: "/tmp/{{ inventory_hostname }}-ospp.html"

    - name: Create ServiceNow Incident
      servicenow.itsm.incident:
        instance: "{{ snow_instance }}"
        short_description: "{{ inventory_hostname }} OpenSCAP report"
        caller: amack
        state: new
        impact: low
        urgency: low
        attachments:
          - path: "{{ _report }}"
      delegate_to: localhost

...
